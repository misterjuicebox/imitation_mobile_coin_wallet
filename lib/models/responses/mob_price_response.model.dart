// this was generated by app.quicktype.io, there's lots of tools to map results but this one was quick to implement

import 'dart:convert';

MobPriceResponse mobPriceResponseFromJson(String? str) => MobPriceResponse.fromJson(json.decode(str!));

String mobPriceResponseToJson(MobPriceResponse data) => json.encode(data.toJson());

class MobPriceResponse {
  MobPriceResponse({
    required this.status,
    required this.data,
  });

  final Status status;
  final Data data;

  factory MobPriceResponse.fromJson(Map<String, dynamic> json) => MobPriceResponse(
        status: Status.fromJson(json["status"]),
        data: Data.fromJson(json["data"]),
      );

  Map<String, dynamic> toJson() => {
        "status": status.toJson(),
        "data": data.toJson(),
      };
}

class Data {
  Data({
    required this.the7878,
  });

  final The7878 the7878;

  factory Data.fromJson(Map<String, dynamic> json) => Data(
        the7878: The7878.fromJson(json["7878"]),
      );

  Map<String, dynamic> toJson() => {
        "7878": the7878.toJson(),
      };
}

class The7878 {
  The7878({
    required this.id,
    required this.name,
    required this.symbol,
    required this.slug,
    required this.numMarketPairs,
    required this.dateAdded,
    required this.tags,
    required this.maxSupply,
    required this.circulatingSupply,
    required this.totalSupply,
    required this.isActive,
    required this.platform,
    required this.cmcRank,
    required this.isFiat,
    required this.selfReportedCirculatingSupply,
    required this.selfReportedMarketCap,
    required this.lastUpdated,
    required this.quote,
  });

  final int id;
  final String name;
  final String symbol;
  final String slug;
  final int numMarketPairs;
  final DateTime dateAdded;
  final List<Tag> tags;
  final dynamic maxSupply;
  final int circulatingSupply;
  final int totalSupply;
  final int isActive;
  final dynamic platform;
  final int cmcRank;
  final int isFiat;
  final int selfReportedCirculatingSupply;
  final double selfReportedMarketCap;
  final DateTime lastUpdated;
  final Quote quote;

  factory The7878.fromJson(Map<String, dynamic> json) => The7878(
        id: json["id"],
        name: json["name"],
        symbol: json["symbol"],
        slug: json["slug"],
        numMarketPairs: json["num_market_pairs"],
        dateAdded: DateTime.parse(json["date_added"]),
        tags: List<Tag>.from(json["tags"].map((x) => Tag.fromJson(x))),
        maxSupply: json["max_supply"],
        circulatingSupply: json["circulating_supply"],
        totalSupply: json["total_supply"],
        isActive: json["is_active"],
        platform: json["platform"],
        cmcRank: json["cmc_rank"],
        isFiat: json["is_fiat"],
        selfReportedCirculatingSupply: json["self_reported_circulating_supply"],
        selfReportedMarketCap: json["self_reported_market_cap"].toDouble(),
        lastUpdated: DateTime.parse(json["last_updated"]),
        quote: Quote.fromJson(json["quote"]),
      );

  Map<String, dynamic> toJson() => {
        "id": id,
        "name": name,
        "symbol": symbol,
        "slug": slug,
        "num_market_pairs": numMarketPairs,
        "date_added": dateAdded.toIso8601String(),
        "tags": List<dynamic>.from(tags.map((x) => x.toJson())),
        "max_supply": maxSupply,
        "circulating_supply": circulatingSupply,
        "total_supply": totalSupply,
        "is_active": isActive,
        "platform": platform,
        "cmc_rank": cmcRank,
        "is_fiat": isFiat,
        "self_reported_circulating_supply": selfReportedCirculatingSupply,
        "self_reported_market_cap": selfReportedMarketCap,
        "last_updated": lastUpdated.toIso8601String(),
        "quote": quote.toJson(),
      };
}

class Quote {
  Quote({
    required this.usd,
  });

  final Usd usd;

  factory Quote.fromJson(Map<String, dynamic> json) => Quote(
        usd: Usd.fromJson(json["USD"]),
      );

  Map<String, dynamic> toJson() => {
        "USD": usd.toJson(),
      };
}

class Usd {
  Usd({
    required this.price,
    required this.volume24H,
    required this.volumeChange24H,
    required this.percentChange1H,
    required this.percentChange24H,
    required this.percentChange7D,
    required this.percentChange30D,
    required this.percentChange60D,
    required this.percentChange90D,
    required this.marketCap,
    required this.marketCapDominance,
    required this.fullyDilutedMarketCap,
    required this.lastUpdated,
  });

  final double price;
  final double volume24H;
  final double volumeChange24H;
  final double percentChange1H;
  final double percentChange24H;
  final double percentChange7D;
  final double percentChange30D;
  final double percentChange60D;
  final double percentChange90D;
  final double marketCap;
  final int marketCapDominance;
  final double fullyDilutedMarketCap;
  final DateTime lastUpdated;

  factory Usd.fromJson(Map<String, dynamic> json) => Usd(
        price: json["price"].toDouble(),
        volume24H: json["volume_24h"].toDouble(),
        volumeChange24H: json["volume_change_24h"].toDouble(),
        percentChange1H: json["percent_change_1h"].toDouble(),
        percentChange24H: json["percent_change_24h"].toDouble(),
        percentChange7D: json["percent_change_7d"].toDouble(),
        percentChange30D: json["percent_change_30d"].toDouble(),
        percentChange60D: json["percent_change_60d"].toDouble(),
        percentChange90D: json["percent_change_90d"].toDouble(),
        marketCap: json["market_cap"].toDouble(),
        marketCapDominance: json["market_cap_dominance"],
        fullyDilutedMarketCap: json["fully_diluted_market_cap"].toDouble(),
        lastUpdated: DateTime.parse(json["last_updated"]),
      );

  Map<String, dynamic> toJson() => {
        "price": price,
        "volume_24h": volume24H,
        "volume_change_24h": volumeChange24H,
        "percent_change_1h": percentChange1H,
        "percent_change_24h": percentChange24H,
        "percent_change_7d": percentChange7D,
        "percent_change_30d": percentChange30D,
        "percent_change_60d": percentChange60D,
        "percent_change_90d": percentChange90D,
        "market_cap": marketCap,
        "market_cap_dominance": marketCapDominance,
        "fully_diluted_market_cap": fullyDilutedMarketCap,
        "last_updated": lastUpdated.toIso8601String(),
      };
}

class Tag {
  Tag({
    required this.slug,
    required this.name,
    required this.category,
  });

  final String slug;
  final String name;
  final String category;

  factory Tag.fromJson(Map<String, dynamic> json) => Tag(
        slug: json["slug"],
        name: json["name"],
        category: json["category"],
      );

  Map<String, dynamic> toJson() => {
        "slug": slug,
        "name": name,
        "category": category,
      };
}

class Status {
  Status({
    required this.timestamp,
    required this.errorCode,
    required this.errorMessage,
    required this.elapsed,
    required this.creditCount,
    required this.notice,
  });

  final DateTime timestamp;
  final int errorCode;
  final dynamic errorMessage;
  final int elapsed;
  final int creditCount;
  final dynamic notice;

  factory Status.fromJson(Map<String, dynamic> json) => Status(
        timestamp: DateTime.parse(json["timestamp"]),
        errorCode: json["error_code"],
        errorMessage: json["error_message"],
        elapsed: json["elapsed"],
        creditCount: json["credit_count"],
        notice: json["notice"],
      );

  Map<String, dynamic> toJson() => {
        "timestamp": timestamp.toIso8601String(),
        "error_code": errorCode,
        "error_message": errorMessage,
        "elapsed": elapsed,
        "credit_count": creditCount,
        "notice": notice,
      };
}
