// this was generated by app.quicktype.io, there's lots of tools to map results but this one was quick to implement

import 'dart:convert';

BuildAndSubmitTransactionResponse buildAndSubmitTransactionResponseFromJson(String str) =>
    BuildAndSubmitTransactionResponse.fromJson(json.decode(str));

String buildAndSubmitTransactionResponseToJson(BuildAndSubmitTransactionResponse data) => json.encode(data.toJson());

class BuildAndSubmitTransactionResponse {
  BuildAndSubmitTransactionResponse({
    required this.method,
    required this.result,
  });

  final String method;
  final Result result;

  factory BuildAndSubmitTransactionResponse.fromJson(Map<String, dynamic> json) => BuildAndSubmitTransactionResponse(
        method: json["method"],
        result: Result.fromJson(json["result"]),
      );

  Map<String, dynamic> toJson() => {
        "method": method,
        "result": result.toJson(),
      };
}

class Result {
  Result({
    required this.transactionLog,
  });

  final TransactionLog transactionLog;

  factory Result.fromJson(Map<String, dynamic> json) => Result(
        transactionLog: TransactionLog.fromJson(json["transaction_log"]),
      );

  Map<String, dynamic> toJson() => {
        "transaction_log": transactionLog.toJson(),
      };
}

class TransactionLog {
  TransactionLog({
    required this.object,
    required this.transactionLogId,
    required this.direction,
    required this.isSentRecovered,
    required this.accountId,
    required this.inputTxos,
    required this.outputTxos,
    required this.changeTxos,
    required this.assignedAddressId,
    required this.valuePmob,
    required this.feePmob,
    required this.submittedBlockIndex,
    required this.finalizedBlockIndex,
    required this.status,
    required this.sentTime,
    required this.comment,
    required this.failureCode,
    required this.failureMessage,
  });

  final String object;
  final String transactionLogId;
  final String direction;
  final dynamic isSentRecovered;
  final String accountId;
  final List<Txo> inputTxos;
  final List<Txo> outputTxos;
  final List<Txo> changeTxos;
  final dynamic assignedAddressId;
  final String valuePmob;
  final String feePmob;
  final String submittedBlockIndex;
  final dynamic finalizedBlockIndex;
  final String status;
  final String sentTime;
  final String comment;
  final dynamic failureCode;
  final dynamic failureMessage;

  factory TransactionLog.fromJson(Map<String, dynamic> json) => TransactionLog(
        object: json["object"],
        transactionLogId: json["transaction_log_id"],
        direction: json["direction"],
        isSentRecovered: json["is_sent_recovered"],
        accountId: json["account_id"],
        inputTxos: List<Txo>.from(json["input_txos"].map((x) => Txo.fromJson(x))),
        outputTxos: List<Txo>.from(json["output_txos"].map((x) => Txo.fromJson(x))),
        changeTxos: List<Txo>.from(json["change_txos"].map((x) => Txo.fromJson(x))),
        assignedAddressId: json["assigned_address_id"],
        valuePmob: json["value_pmob"],
        feePmob: json["fee_pmob"],
        submittedBlockIndex: json["submitted_block_index"],
        finalizedBlockIndex: json["finalized_block_index"],
        status: json["status"],
        sentTime: json["sent_time"],
        comment: json["comment"],
        failureCode: json["failure_code"],
        failureMessage: json["failure_message"],
      );

  Map<String, dynamic> toJson() => {
        "object": object,
        "transaction_log_id": transactionLogId,
        "direction": direction,
        "is_sent_recovered": isSentRecovered,
        "account_id": accountId,
        "input_txos": List<dynamic>.from(inputTxos.map((x) => x.toJson())),
        "output_txos": List<dynamic>.from(outputTxos.map((x) => x.toJson())),
        "change_txos": List<dynamic>.from(changeTxos.map((x) => x.toJson())),
        "assigned_address_id": assignedAddressId,
        "value_pmob": valuePmob,
        "fee_pmob": feePmob,
        "submitted_block_index": submittedBlockIndex,
        "finalized_block_index": finalizedBlockIndex,
        "status": status,
        "sent_time": sentTime,
        "comment": comment,
        "failure_code": failureCode,
        "failure_message": failureMessage,
      };
}

class Txo {
  Txo({
    required this.txoIdHex,
    required this.recipientAddressId,
    required this.valuePmob,
  });

  final String txoIdHex;
  final String recipientAddressId;
  final String valuePmob;

  factory Txo.fromJson(Map<String, dynamic> json) => Txo(
        txoIdHex: json["txo_id_hex"],
        recipientAddressId: json["recipient_address_id"],
        valuePmob: json["value_pmob"],
      );

  Map<String, dynamic> toJson() => {
        "txo_id_hex": txoIdHex,
        "recipient_address_id": recipientAddressId,
        "value_pmob": valuePmob,
      };
}
